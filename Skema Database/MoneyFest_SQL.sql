-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."SubKategori"
(
    id bigint NOT NULL DEFAULT nextval('"SubKategori_id_seq"'::regclass),
    user_id bigint NOT NULL,
    "NamaSub" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    uang bigint NOT NULL,
    kategori_id bigint NOT NULL,
    created_at timestamp(0) with time zone,
    updated_at timestamp(0) with time zone,
    CONSTRAINT "SubKategori_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.balances
(
    id bigint NOT NULL DEFAULT nextval('balances_id_seq'::regclass),
    balance character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_id bigint NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT balances_pkey PRIMARY KEY (id),
    CONSTRAINT balances_user_id_unique UNIQUE (user_id)
);

CREATE TABLE IF NOT EXISTS public.instalment
(
    id bigint NOT NULL DEFAULT nextval('instalment_id_seq'::regclass),
    user_id bigint NOT NULL,
    kategori character varying(255) COLLATE pg_catalog."default" NOT NULL,
    assigned numeric(8, 2) NOT NULL DEFAULT '0'::numeric,
    available numeric(8, 2) NOT NULL DEFAULT '0'::numeric,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT instalment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.kategori
(
    id bigint NOT NULL DEFAULT nextval('kategori_id_seq'::regclass),
    user_id bigint NOT NULL,
    "NamaKategori" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    jumlah bigint NOT NULL DEFAULT '0'::bigint,
    created_at timestamp(0) with time zone,
    updated_at timestamp(0) with time zone,
    CONSTRAINT kategori_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.migrations
(
    id integer NOT NULL DEFAULT nextval('migrations_id_seq'::regclass),
    migration character varying(255) COLLATE pg_catalog."default" NOT NULL,
    batch integer NOT NULL,
    CONSTRAINT migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.personal_access_tokens
(
    id bigint NOT NULL DEFAULT nextval('personal_access_tokens_id_seq'::regclass),
    tokenable_type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    tokenable_id bigint NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    token character varying(64) COLLATE pg_catalog."default" NOT NULL,
    abilities text COLLATE pg_catalog."default",
    last_used_at timestamp(0) without time zone,
    expires_at timestamp(0) without time zone,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT personal_access_tokens_pkey PRIMARY KEY (id),
    CONSTRAINT personal_access_tokens_token_unique UNIQUE (token)
);

CREATE TABLE IF NOT EXISTS public.reminders
(
    id bigint NOT NULL DEFAULT nextval('reminders_id_seq'::regclass),
    user_id bigint NOT NULL,
    instalment_id bigint NOT NULL,
    deadline date NOT NULL,
    frequency character varying(255) COLLATE pg_catalog."default" NOT NULL,
    notes text COLLATE pg_catalog."default",
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT reminders_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id bigint NOT NULL DEFAULT nextval('users_id_seq'::regclass),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    username character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "NickName" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    profile_image character varying(255) COLLATE pg_catalog."default",
    created_at timestamp(0) with time zone,
    updated_at timestamp(0) with time zone,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_unique UNIQUE (email),
    CONSTRAINT users_username_unique UNIQUE (username)
);

ALTER TABLE IF EXISTS public."SubKategori"
    ADD CONSTRAINT subkategori_kategori_id_foreign FOREIGN KEY (kategori_id)
    REFERENCES public.kategori (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."SubKategori"
    ADD CONSTRAINT subkategori_user_id_foreign FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.balances
    ADD CONSTRAINT balances_user_id_foreign FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS balances_user_id_unique
    ON public.balances(user_id);


ALTER TABLE IF EXISTS public.instalment
    ADD CONSTRAINT instalment_user_id_foreign FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.kategori
    ADD CONSTRAINT kategori_user_id_foreign FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.reminders
    ADD CONSTRAINT reminders_instalment_id_foreign FOREIGN KEY (instalment_id)
    REFERENCES public.instalment (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reminders
    ADD CONSTRAINT reminders_user_id_foreign FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;